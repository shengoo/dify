name: Sync Docker Images to Aliyun

on:
  workflow_dispatch:  # 只保留手动触发

env:
  ALIYUN_REGISTRY: crpi-4hn8mc09ka3qshdf.cn-beijing.personal.cr.aliyuncs.com
  ALIYUN_NAMESPACE: cl-ai-doc
  DOCKER_IMAGES: |
    langgenius/dify-api:1.1.3
    langgenius/dify-web:1.1.3
    postgres:15-alpine
    redis:6-alpine
    langgenius/dify-sandbox:0.2.11
    langgenius/dify-plugin-daemon:0.0.6-local
    ubuntu/squid:latest
    certbot/certbot:latest
    nginx:latest
    semitechnologies/weaviate:1.19.0
    langgenius/qdrant:v1.7.3
    pgvector/pgvector:pg16
    tensorchord/pgvecto-rs:pg16-v0.3.0
    ghcr.io/chroma-core/chroma:0.5.20
    quay.io/oceanbase/oceanbase-ce:4.3.3.0-100000142024101215
    container-registry.oracle.com/database/free:latest
    quay.io/coreos/etcd:v3.5.5
    minio/minio:RELEASE.2023-03-20T20-16-18Z
    milvusdb/milvus:v2.5.0-beta
    opensearchproject/opensearch:latest
    opensearchproject/opensearch-dashboards:latest
    opengauss/opengauss:7.0.0-RC1
    myscale/myscaledb:1.6.4
    docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    docker.elastic.co/kibana/kibana:8.14.3
    downloads.unstructured.io/unstructured-io/unstructured-api:latest

jobs:
  sync-images:
    runs-on: ubuntu-latest
    steps:
      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Sync images
        run: |
          echo "${{ env.DOCKER_IMAGES }}" | while read -r image; do
            # 提取镜像名称和标签
            if [[ $image == *":"* ]]; then
              image_name=$(echo $image | cut -d':' -f1)
              tag=$(echo $image | cut -d':' -f2)
            else
              image_name=$image
              tag="latest"
            fi
            
            # 处理镜像名称中的斜杠
            if [[ $image_name == *"/"* ]]; then
              repo_name=$(echo $image_name | cut -d'/' -f2-)
            else
              repo_name=$image_name
            fi
            
            # 构建阿里云镜像地址
            aliyun_image="${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_NAMESPACE }}/$repo_name:$tag"
            
            echo "Syncing $image to $aliyun_image"
            
            # 拉取原始镜像
            docker pull $image
            
            # 打标签
            docker tag $image $aliyun_image
            
            # 推送到阿里云
            docker push $aliyun_image
            
            echo "Successfully synced $image to $aliyun_image"
          done
